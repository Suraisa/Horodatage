ARM GAS  /tmp/ccXljzgd.s 			page 1


   1              		.cpu cortex-m0
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 2
   9              		.eabi_attribute 34, 0
  10              		.eabi_attribute 18, 4
  11              		.file	"main.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.SystemClock_Config,"ax",%progbits
  16              		.align	1
  17              		.p2align 2,,3
  18              		.global	SystemClock_Config
  19              		.arch armv6s-m
  20              		.syntax unified
  21              		.code	16
  22              		.thumb_func
  23              		.fpu softvfp
  25              	SystemClock_Config:
  26              	.LFB38:
  27              		.file 1 "Src/main.c"
   1:Src/main.c    **** /* USER CODE BEGIN Header */
   2:Src/main.c    **** /**
   3:Src/main.c    ****   ******************************************************************************
   4:Src/main.c    ****   * @file           : main.c
   5:Src/main.c    ****   * @brief          : Main program body
   6:Src/main.c    ****   ******************************************************************************
   7:Src/main.c    ****   ** This notice applies to any and all portions of this file
   8:Src/main.c    ****   * that are not between comment pairs USER CODE BEGIN and
   9:Src/main.c    ****   * USER CODE END. Other portions of this file, whether 
  10:Src/main.c    ****   * inserted by the user or by software development tools
  11:Src/main.c    ****   * are owned by their respective copyright owners.
  12:Src/main.c    ****   *
  13:Src/main.c    ****   * COPYRIGHT(c) 2019 STMicroelectronics
  14:Src/main.c    ****   *
  15:Src/main.c    ****   * Redistribution and use in source and binary forms, with or without modification,
  16:Src/main.c    ****   * are permitted provided that the following conditions are met:
  17:Src/main.c    ****   *   1. Redistributions of source code must retain the above copyright notice,
  18:Src/main.c    ****   *      this list of conditions and the following disclaimer.
  19:Src/main.c    ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  20:Src/main.c    ****   *      this list of conditions and the following disclaimer in the documentation
  21:Src/main.c    ****   *      and/or other materials provided with the distribution.
  22:Src/main.c    ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  23:Src/main.c    ****   *      may be used to endorse or promote products derived from this software
  24:Src/main.c    ****   *      without specific prior written permission.
  25:Src/main.c    ****   *
  26:Src/main.c    ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  27:Src/main.c    ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  28:Src/main.c    ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  29:Src/main.c    ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  30:Src/main.c    ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  31:Src/main.c    ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
ARM GAS  /tmp/ccXljzgd.s 			page 2


  32:Src/main.c    ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  33:Src/main.c    ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  34:Src/main.c    ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  35:Src/main.c    ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  36:Src/main.c    ****   *
  37:Src/main.c    ****   ******************************************************************************
  38:Src/main.c    ****   */
  39:Src/main.c    **** /* USER CODE END Header */
  40:Src/main.c    **** 
  41:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  42:Src/main.c    **** #include "main.h"
  43:Src/main.c    **** #include "usart.h"
  44:Src/main.c    **** #include "gpio.h"
  45:Src/main.c    **** 
  46:Src/main.c    **** /* Private includes ----------------------------------------------------------*/
  47:Src/main.c    **** /* USER CODE BEGIN Includes */
  48:Src/main.c    **** #include "LedControler.h"
  49:Src/main.c    **** /* USER CODE END Includes */
  50:Src/main.c    **** 
  51:Src/main.c    **** /* Private typedef -----------------------------------------------------------*/
  52:Src/main.c    **** /* USER CODE BEGIN PTD */
  53:Src/main.c    **** 
  54:Src/main.c    **** /* USER CODE END PTD */
  55:Src/main.c    **** 
  56:Src/main.c    **** /* Private define ------------------------------------------------------------*/
  57:Src/main.c    **** /* USER CODE BEGIN PD */
  58:Src/main.c    **** 
  59:Src/main.c    **** /* USER CODE END PD */
  60:Src/main.c    **** 
  61:Src/main.c    **** /* Private macro -------------------------------------------------------------*/
  62:Src/main.c    **** /* USER CODE BEGIN PM */
  63:Src/main.c    **** 
  64:Src/main.c    **** /* USER CODE END PM */
  65:Src/main.c    **** 
  66:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  67:Src/main.c    **** 
  68:Src/main.c    **** /* USER CODE BEGIN PV */
  69:Src/main.c    **** 
  70:Src/main.c    **** /* USER CODE END PV */
  71:Src/main.c    **** 
  72:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  73:Src/main.c    **** void SystemClock_Config(void);
  74:Src/main.c    **** /* USER CODE BEGIN PFP */
  75:Src/main.c    **** 
  76:Src/main.c    **** /* USER CODE END PFP */
  77:Src/main.c    **** 
  78:Src/main.c    **** /* Private user code ---------------------------------------------------------*/
  79:Src/main.c    **** /* USER CODE BEGIN 0 */
  80:Src/main.c    **** 
  81:Src/main.c    **** /* USER CODE END 0 */
  82:Src/main.c    **** 
  83:Src/main.c    **** /**
  84:Src/main.c    ****   * @brief  The application entry point.
  85:Src/main.c    ****   * @retval int
  86:Src/main.c    ****   */
  87:Src/main.c    **** int main(void)
  88:Src/main.c    **** {
ARM GAS  /tmp/ccXljzgd.s 			page 3


  89:Src/main.c    ****   /* USER CODE BEGIN 1 */
  90:Src/main.c    ****   ADRESSE leds[4];
  91:Src/main.c    ****   /* USER CODE END 1 */
  92:Src/main.c    **** 
  93:Src/main.c    ****   /* MCU Configuration--------------------------------------------------------*/
  94:Src/main.c    **** 
  95:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  96:Src/main.c    ****   HAL_Init();
  97:Src/main.c    **** 
  98:Src/main.c    ****   /* USER CODE BEGIN Init */
  99:Src/main.c    **** 
 100:Src/main.c    ****   /* USER CODE END Init */
 101:Src/main.c    **** 
 102:Src/main.c    ****   /* Configure the system clock */
 103:Src/main.c    ****   SystemClock_Config();
 104:Src/main.c    **** 
 105:Src/main.c    ****   /* USER CODE BEGIN SysInit */
 106:Src/main.c    **** 
 107:Src/main.c    ****   /* USER CODE END SysInit */
 108:Src/main.c    **** 
 109:Src/main.c    ****   /* Initialize all configured peripherals */
 110:Src/main.c    ****   MX_GPIO_Init();
 111:Src/main.c    ****   MX_USART2_UART_Init();
 112:Src/main.c    ****   /* USER CODE BEGIN 2 */
 113:Src/main.c    ****   LedInitialization(leds);
 114:Src/main.c    ****   HAL_GPIO_WritePin(LD4_GPIO_Port, LD4_Pin, 0);
 115:Src/main.c    ****   /* USER CODE END 2 */
 116:Src/main.c    **** 
 117:Src/main.c    ****   /* Infinite loop */
 118:Src/main.c    ****   /* USER CODE BEGIN WHILE */
 119:Src/main.c    ****   while (1)
 120:Src/main.c    ****   {
 121:Src/main.c    ****     /* USER CODE END WHILE */
 122:Src/main.c    **** 
 123:Src/main.c    ****     /* USER CODE BEGIN 3 */
 124:Src/main.c    ****   }
 125:Src/main.c    ****   /* USER CODE END 3 */
 126:Src/main.c    **** }
 127:Src/main.c    **** 
 128:Src/main.c    **** /**
 129:Src/main.c    ****   * @brief System Clock Configuration
 130:Src/main.c    ****   * @retval None
 131:Src/main.c    ****   */
 132:Src/main.c    **** void SystemClock_Config(void)
 133:Src/main.c    **** {
  28              		.loc 1 133 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 64
  31              		@ frame_needed = 0, uses_anonymous_args = 0
 134:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
  32              		.loc 1 134 3 view .LVU1
 133:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
  33              		.loc 1 133 1 is_stmt 0 view .LVU2
  34 0000 00B5     		push	{lr}
  35              	.LCFI0:
  36              		.cfi_def_cfa_offset 4
  37              		.cfi_offset 14, -4
ARM GAS  /tmp/ccXljzgd.s 			page 4


  38 0002 91B0     		sub	sp, sp, #68
  39              	.LCFI1:
  40              		.cfi_def_cfa_offset 72
  41              		.loc 1 134 22 view .LVU3
  42 0004 2C22     		movs	r2, #44
  43 0006 0021     		movs	r1, #0
  44 0008 05A8     		add	r0, sp, #20
  45 000a FFF7FEFF 		bl	memset
  46              	.LVL0:
 135:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
  47              		.loc 1 135 3 is_stmt 1 view .LVU4
  48              		.loc 1 135 22 is_stmt 0 view .LVU5
  49 000e 0021     		movs	r1, #0
  50 0010 1022     		movs	r2, #16
  51 0012 6846     		mov	r0, sp
  52 0014 FFF7FEFF 		bl	memset
  53              	.LVL1:
 136:Src/main.c    **** 
 137:Src/main.c    ****   /**Initializes the CPU, AHB and APB busses clocks 
 138:Src/main.c    ****   */
 139:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
  54              		.loc 1 139 3 is_stmt 1 view .LVU6
  55              		.loc 1 139 36 is_stmt 0 view .LVU7
  56 0018 0223     		movs	r3, #2
 140:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
  57              		.loc 1 140 30 view .LVU8
  58 001a 0122     		movs	r2, #1
 139:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
  59              		.loc 1 139 36 view .LVU9
  60 001c 0493     		str	r3, [sp, #16]
  61              		.loc 1 140 3 is_stmt 1 view .LVU10
 141:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 142:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
  62              		.loc 1 142 34 is_stmt 0 view .LVU11
  63 001e 0C93     		str	r3, [sp, #48]
 143:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 144:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL12;
  64              		.loc 1 144 32 view .LVU12
  65 0020 A023     		movs	r3, #160
 140:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
  66              		.loc 1 140 30 view .LVU13
  67 0022 0792     		str	r2, [sp, #28]
 141:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
  68              		.loc 1 141 3 is_stmt 1 view .LVU14
  69              		.loc 1 144 32 is_stmt 0 view .LVU15
  70 0024 9B03     		lsls	r3, r3, #14
 141:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
  71              		.loc 1 141 41 view .LVU16
  72 0026 0F32     		adds	r2, r2, #15
 145:Src/main.c    ****   RCC_OscInitStruct.PLL.PREDIV = RCC_PREDIV_DIV1;
 146:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
  73              		.loc 1 146 7 view .LVU17
  74 0028 04A8     		add	r0, sp, #16
 141:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
  75              		.loc 1 141 41 view .LVU18
  76 002a 0892     		str	r2, [sp, #32]
 142:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
ARM GAS  /tmp/ccXljzgd.s 			page 5


  77              		.loc 1 142 3 is_stmt 1 view .LVU19
 143:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL12;
  78              		.loc 1 143 3 view .LVU20
 144:Src/main.c    ****   RCC_OscInitStruct.PLL.PREDIV = RCC_PREDIV_DIV1;
  79              		.loc 1 144 3 view .LVU21
 144:Src/main.c    ****   RCC_OscInitStruct.PLL.PREDIV = RCC_PREDIV_DIV1;
  80              		.loc 1 144 32 is_stmt 0 view .LVU22
  81 002c 0E93     		str	r3, [sp, #56]
 145:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
  82              		.loc 1 145 3 is_stmt 1 view .LVU23
  83              		.loc 1 146 3 view .LVU24
  84              		.loc 1 146 7 is_stmt 0 view .LVU25
  85 002e FFF7FEFF 		bl	HAL_RCC_OscConfig
  86              	.LVL2:
 147:Src/main.c    ****   {
 148:Src/main.c    ****     Error_Handler();
 149:Src/main.c    ****   }
 150:Src/main.c    ****   /**Initializes the CPU, AHB and APB busses clocks 
 151:Src/main.c    ****   */
 152:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
  87              		.loc 1 152 3 is_stmt 1 view .LVU26
 153:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1;
 154:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
  88              		.loc 1 154 3 view .LVU27
 155:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
  89              		.loc 1 155 3 view .LVU28
 156:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
  90              		.loc 1 156 3 view .LVU29
 152:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1;
  91              		.loc 1 152 31 is_stmt 0 view .LVU30
  92 0032 0722     		movs	r2, #7
  93 0034 0223     		movs	r3, #2
  94 0036 0092     		str	r2, [sp]
  95 0038 0193     		str	r3, [sp, #4]
  96 003a 0022     		movs	r2, #0
  97 003c 0023     		movs	r3, #0
 157:Src/main.c    **** 
 158:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_1) != HAL_OK)
  98              		.loc 1 158 7 view .LVU31
  99 003e 0121     		movs	r1, #1
 100 0040 6846     		mov	r0, sp
 152:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1;
 101              		.loc 1 152 31 view .LVU32
 102 0042 0292     		str	r2, [sp, #8]
 103 0044 0393     		str	r3, [sp, #12]
 104              		.loc 1 158 3 is_stmt 1 view .LVU33
 105              		.loc 1 158 7 is_stmt 0 view .LVU34
 106 0046 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 107              	.LVL3:
 159:Src/main.c    ****   {
 160:Src/main.c    ****     Error_Handler();
 161:Src/main.c    ****   }
 162:Src/main.c    **** }
 108              		.loc 1 162 1 view .LVU35
 109 004a 11B0     		add	sp, sp, #68
 110              		@ sp needed
 111 004c 00BD     		pop	{pc}
ARM GAS  /tmp/ccXljzgd.s 			page 6


 112              		.cfi_endproc
 113              	.LFE38:
 115 004e C046     		.section	.text.startup.main,"ax",%progbits
 116              		.align	1
 117              		.p2align 2,,3
 118              		.global	main
 119              		.syntax unified
 120              		.code	16
 121              		.thumb_func
 122              		.fpu softvfp
 124              	main:
 125              	.LFB37:
  88:Src/main.c    ****   /* USER CODE BEGIN 1 */
 126              		.loc 1 88 1 is_stmt 1 view -0
 127              		.cfi_startproc
 128              		@ Volatile: function does not return.
 129              		@ args = 0, pretend = 0, frame = 32
 130              		@ frame_needed = 0, uses_anonymous_args = 0
  90:Src/main.c    ****   /* USER CODE END 1 */
 131              		.loc 1 90 3 view .LVU37
  96:Src/main.c    **** 
 132              		.loc 1 96 3 view .LVU38
  88:Src/main.c    ****   /* USER CODE BEGIN 1 */
 133              		.loc 1 88 1 is_stmt 0 view .LVU39
 134 0000 00B5     		push	{lr}
 135              	.LCFI2:
 136              		.cfi_def_cfa_offset 4
 137              		.cfi_offset 14, -4
 138 0002 89B0     		sub	sp, sp, #36
 139              	.LCFI3:
 140              		.cfi_def_cfa_offset 40
  96:Src/main.c    **** 
 141              		.loc 1 96 3 view .LVU40
 142 0004 FFF7FEFF 		bl	HAL_Init
 143              	.LVL4:
 103:Src/main.c    **** 
 144              		.loc 1 103 3 is_stmt 1 view .LVU41
 145 0008 FFF7FEFF 		bl	SystemClock_Config
 146              	.LVL5:
 110:Src/main.c    ****   MX_USART2_UART_Init();
 147              		.loc 1 110 3 view .LVU42
 148 000c FFF7FEFF 		bl	MX_GPIO_Init
 149              	.LVL6:
 111:Src/main.c    ****   /* USER CODE BEGIN 2 */
 150              		.loc 1 111 3 view .LVU43
 151 0010 FFF7FEFF 		bl	MX_USART2_UART_Init
 152              	.LVL7:
 113:Src/main.c    ****   HAL_GPIO_WritePin(LD4_GPIO_Port, LD4_Pin, 0);
 153              		.loc 1 113 3 view .LVU44
 154 0014 6846     		mov	r0, sp
 155 0016 FFF7FEFF 		bl	LedInitialization
 156              	.LVL8:
 114:Src/main.c    ****   /* USER CODE END 2 */
 157              		.loc 1 114 3 view .LVU45
 158 001a 8021     		movs	r1, #128
 159 001c 0022     		movs	r2, #0
 160 001e 4900     		lsls	r1, r1, #1
ARM GAS  /tmp/ccXljzgd.s 			page 7


 161 0020 0148     		ldr	r0, .L5
 162 0022 FFF7FEFF 		bl	HAL_GPIO_WritePin
 163              	.LVL9:
 164              	.L4:
 119:Src/main.c    ****   {
 165              		.loc 1 119 3 discriminator 1 view .LVU46
 124:Src/main.c    ****   /* USER CODE END 3 */
 166              		.loc 1 124 3 discriminator 1 view .LVU47
 119:Src/main.c    ****   {
 167              		.loc 1 119 3 discriminator 1 view .LVU48
 124:Src/main.c    ****   /* USER CODE END 3 */
 168              		.loc 1 124 3 discriminator 1 view .LVU49
 169 0026 FEE7     		b	.L4
 170              	.L6:
 171              		.align	2
 172              	.L5:
 173 0028 00080048 		.word	1207961600
 174              		.cfi_endproc
 175              	.LFE37:
 177              		.section	.text.Error_Handler,"ax",%progbits
 178              		.align	1
 179              		.p2align 2,,3
 180              		.global	Error_Handler
 181              		.syntax unified
 182              		.code	16
 183              		.thumb_func
 184              		.fpu softvfp
 186              	Error_Handler:
 187              	.LFB39:
 163:Src/main.c    **** 
 164:Src/main.c    **** /* USER CODE BEGIN 4 */
 165:Src/main.c    **** 
 166:Src/main.c    **** /* USER CODE END 4 */
 167:Src/main.c    **** 
 168:Src/main.c    **** /**
 169:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 170:Src/main.c    ****   * @retval None
 171:Src/main.c    ****   */
 172:Src/main.c    **** void Error_Handler(void)
 173:Src/main.c    **** {
 188              		.loc 1 173 1 view -0
 189              		.cfi_startproc
 190              		@ args = 0, pretend = 0, frame = 0
 191              		@ frame_needed = 0, uses_anonymous_args = 0
 192              		@ link register save eliminated.
 174:Src/main.c    ****   /* USER CODE BEGIN Error_Handler_Debug */
 175:Src/main.c    ****   /* User can add his own implementation to report the HAL error return state */
 176:Src/main.c    **** 
 177:Src/main.c    ****   /* USER CODE END Error_Handler_Debug */
 178:Src/main.c    **** }
 193              		.loc 1 178 1 view .LVU51
 194              		@ sp needed
 195 0000 7047     		bx	lr
 196              		.cfi_endproc
 197              	.LFE39:
 199 0002 C046     		.text
 200              	.Letext0:
ARM GAS  /tmp/ccXljzgd.s 			page 8


 201              		.file 2 "/usr/arm-none-eabi/include/machine/_default_types.h"
 202              		.file 3 "/usr/arm-none-eabi/include/sys/_stdint.h"
 203              		.file 4 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/system_stm32f0xx.h"
 204              		.file 5 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f030x8.h"
 205              		.file 6 "/usr/arm-none-eabi/include/sys/lock.h"
 206              		.file 7 "/usr/arm-none-eabi/include/sys/_types.h"
 207              		.file 8 "/usr/lib/gcc/arm-none-eabi/8.2.0/include/stddef.h"
 208              		.file 9 "/usr/arm-none-eabi/include/sys/reent.h"
 209              		.file 10 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_def.h"
 210              		.file 11 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_rcc.h"
 211              		.file 12 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_dma.h"
 212              		.file 13 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_uart.h"
 213              		.file 14 "Inc/usart.h"
 214              		.file 15 "Inc/LedControler.h"
 215              		.file 16 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal.h"
 216              		.file 17 "Inc/gpio.h"
 217              		.file 18 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_gpio.h"
 218              		.file 19 "<built-in>"
ARM GAS  /tmp/ccXljzgd.s 			page 9


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccXljzgd.s:16     .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccXljzgd.s:25     .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccXljzgd.s:116    .text.startup.main:0000000000000000 $t
     /tmp/ccXljzgd.s:124    .text.startup.main:0000000000000000 main
     /tmp/ccXljzgd.s:173    .text.startup.main:0000000000000028 $d
     /tmp/ccXljzgd.s:178    .text.Error_Handler:0000000000000000 $t
     /tmp/ccXljzgd.s:186    .text.Error_Handler:0000000000000000 Error_Handler

UNDEFINED SYMBOLS
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
MX_GPIO_Init
MX_USART2_UART_Init
LedInitialization
HAL_GPIO_WritePin
