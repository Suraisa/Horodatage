ARM GAS  /tmp/cc0iXrgn.s 			page 1


   1              		.cpu cortex-m0
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 2
   9              		.eabi_attribute 34, 0
  10              		.eabi_attribute 18, 4
  11              		.file	"stm32f0xx_it.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.NMI_Handler,"ax",%progbits
  16              		.align	1
  17              		.p2align 2,,3
  18              		.global	NMI_Handler
  19              		.arch armv6s-m
  20              		.syntax unified
  21              		.code	16
  22              		.thumb_func
  23              		.fpu softvfp
  25              	NMI_Handler:
  26              	.LFB37:
  27              		.file 1 "Src/stm32f0xx_it.c"
   1:Src/stm32f0xx_it.c **** /* USER CODE BEGIN Header */
   2:Src/stm32f0xx_it.c **** /**
   3:Src/stm32f0xx_it.c ****   ******************************************************************************
   4:Src/stm32f0xx_it.c ****   * @file    stm32f0xx_it.c
   5:Src/stm32f0xx_it.c ****   * @brief   Interrupt Service Routines.
   6:Src/stm32f0xx_it.c ****   ******************************************************************************
   7:Src/stm32f0xx_it.c ****   *
   8:Src/stm32f0xx_it.c ****   * COPYRIGHT(c) 2019 STMicroelectronics
   9:Src/stm32f0xx_it.c ****   *
  10:Src/stm32f0xx_it.c ****   * Redistribution and use in source and binary forms, with or without modification,
  11:Src/stm32f0xx_it.c ****   * are permitted provided that the following conditions are met:
  12:Src/stm32f0xx_it.c ****   *   1. Redistributions of source code must retain the above copyright notice,
  13:Src/stm32f0xx_it.c ****   *      this list of conditions and the following disclaimer.
  14:Src/stm32f0xx_it.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  15:Src/stm32f0xx_it.c ****   *      this list of conditions and the following disclaimer in the documentation
  16:Src/stm32f0xx_it.c ****   *      and/or other materials provided with the distribution.
  17:Src/stm32f0xx_it.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  18:Src/stm32f0xx_it.c ****   *      may be used to endorse or promote products derived from this software
  19:Src/stm32f0xx_it.c ****   *      without specific prior written permission.
  20:Src/stm32f0xx_it.c ****   *
  21:Src/stm32f0xx_it.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:Src/stm32f0xx_it.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:Src/stm32f0xx_it.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  24:Src/stm32f0xx_it.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  25:Src/stm32f0xx_it.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  26:Src/stm32f0xx_it.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  27:Src/stm32f0xx_it.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  28:Src/stm32f0xx_it.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  29:Src/stm32f0xx_it.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  30:Src/stm32f0xx_it.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  31:Src/stm32f0xx_it.c ****   *
ARM GAS  /tmp/cc0iXrgn.s 			page 2


  32:Src/stm32f0xx_it.c ****   ******************************************************************************
  33:Src/stm32f0xx_it.c ****   */
  34:Src/stm32f0xx_it.c **** /* USER CODE END Header */
  35:Src/stm32f0xx_it.c **** 
  36:Src/stm32f0xx_it.c **** /* Includes ------------------------------------------------------------------*/
  37:Src/stm32f0xx_it.c **** #include "main.h"
  38:Src/stm32f0xx_it.c **** #include "stm32f0xx_it.h"
  39:Src/stm32f0xx_it.c **** /* Private includes ----------------------------------------------------------*/
  40:Src/stm32f0xx_it.c **** /* USER CODE BEGIN Includes */
  41:Src/stm32f0xx_it.c **** /* USER CODE END Includes */
  42:Src/stm32f0xx_it.c **** 
  43:Src/stm32f0xx_it.c **** /* Private typedef -----------------------------------------------------------*/
  44:Src/stm32f0xx_it.c **** /* USER CODE BEGIN TD */
  45:Src/stm32f0xx_it.c **** 
  46:Src/stm32f0xx_it.c **** /* USER CODE END TD */
  47:Src/stm32f0xx_it.c **** 
  48:Src/stm32f0xx_it.c **** /* Private define ------------------------------------------------------------*/
  49:Src/stm32f0xx_it.c **** /* USER CODE BEGIN PD */
  50:Src/stm32f0xx_it.c ****  
  51:Src/stm32f0xx_it.c **** /* USER CODE END PD */
  52:Src/stm32f0xx_it.c **** 
  53:Src/stm32f0xx_it.c **** /* Private macro -------------------------------------------------------------*/
  54:Src/stm32f0xx_it.c **** /* USER CODE BEGIN PM */
  55:Src/stm32f0xx_it.c **** 
  56:Src/stm32f0xx_it.c **** /* USER CODE END PM */
  57:Src/stm32f0xx_it.c **** 
  58:Src/stm32f0xx_it.c **** /* Private variables ---------------------------------------------------------*/
  59:Src/stm32f0xx_it.c **** /* USER CODE BEGIN PV */
  60:Src/stm32f0xx_it.c **** 
  61:Src/stm32f0xx_it.c **** /* USER CODE END PV */
  62:Src/stm32f0xx_it.c **** 
  63:Src/stm32f0xx_it.c **** /* Private function prototypes -----------------------------------------------*/
  64:Src/stm32f0xx_it.c **** /* USER CODE BEGIN PFP */
  65:Src/stm32f0xx_it.c **** 
  66:Src/stm32f0xx_it.c **** /* USER CODE END PFP */
  67:Src/stm32f0xx_it.c **** 
  68:Src/stm32f0xx_it.c **** /* Private user code ---------------------------------------------------------*/
  69:Src/stm32f0xx_it.c **** /* USER CODE BEGIN 0 */
  70:Src/stm32f0xx_it.c **** 
  71:Src/stm32f0xx_it.c **** /* USER CODE END 0 */
  72:Src/stm32f0xx_it.c **** 
  73:Src/stm32f0xx_it.c **** /* External variables --------------------------------------------------------*/
  74:Src/stm32f0xx_it.c **** /* USER CODE BEGIN EV */
  75:Src/stm32f0xx_it.c **** 
  76:Src/stm32f0xx_it.c **** /* USER CODE END EV */
  77:Src/stm32f0xx_it.c **** 
  78:Src/stm32f0xx_it.c **** /******************************************************************************/
  79:Src/stm32f0xx_it.c **** /*           Cortex-M0 Processor Interruption and Exception Handlers          */ 
  80:Src/stm32f0xx_it.c **** /******************************************************************************/
  81:Src/stm32f0xx_it.c **** /**
  82:Src/stm32f0xx_it.c ****   * @brief This function handles Non maskable interrupt.
  83:Src/stm32f0xx_it.c ****   */
  84:Src/stm32f0xx_it.c **** void NMI_Handler(void)
  85:Src/stm32f0xx_it.c **** {
  28              		.loc 1 85 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/cc0iXrgn.s 			page 3


  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  86:Src/stm32f0xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 0 */
  87:Src/stm32f0xx_it.c **** 
  88:Src/stm32f0xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 0 */
  89:Src/stm32f0xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  90:Src/stm32f0xx_it.c **** 
  91:Src/stm32f0xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 1 */
  92:Src/stm32f0xx_it.c **** }
  33              		.loc 1 92 1 view .LVU1
  34              		@ sp needed
  35 0000 7047     		bx	lr
  36              		.cfi_endproc
  37              	.LFE37:
  39 0002 C046     		.section	.text.HardFault_Handler,"ax",%progbits
  40              		.align	1
  41              		.p2align 2,,3
  42              		.global	HardFault_Handler
  43              		.syntax unified
  44              		.code	16
  45              		.thumb_func
  46              		.fpu softvfp
  48              	HardFault_Handler:
  49              	.LFB38:
  93:Src/stm32f0xx_it.c **** 
  94:Src/stm32f0xx_it.c **** /**
  95:Src/stm32f0xx_it.c ****   * @brief This function handles Hard fault interrupt.
  96:Src/stm32f0xx_it.c ****   */
  97:Src/stm32f0xx_it.c **** void HardFault_Handler(void)
  98:Src/stm32f0xx_it.c **** {
  50              		.loc 1 98 1 view -0
  51              		.cfi_startproc
  52              		@ Volatile: function does not return.
  53              		@ args = 0, pretend = 0, frame = 0
  54              		@ frame_needed = 0, uses_anonymous_args = 0
  55              		@ link register save eliminated.
  56              	.L4:
  99:Src/stm32f0xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 0 */
 100:Src/stm32f0xx_it.c **** 
 101:Src/stm32f0xx_it.c ****   /* USER CODE END HardFault_IRQn 0 */
 102:Src/stm32f0xx_it.c ****   while (1)
  57              		.loc 1 102 3 discriminator 1 view .LVU3
 103:Src/stm32f0xx_it.c ****   {
 104:Src/stm32f0xx_it.c ****     /* USER CODE BEGIN W1_HardFault_IRQn 0 */
 105:Src/stm32f0xx_it.c ****     /* USER CODE END W1_HardFault_IRQn 0 */
 106:Src/stm32f0xx_it.c ****   }
  58              		.loc 1 106 3 discriminator 1 view .LVU4
  59 0000 FEE7     		b	.L4
  60              		.cfi_endproc
  61              	.LFE38:
  63 0002 C046     		.section	.text.SVC_Handler,"ax",%progbits
  64              		.align	1
  65              		.p2align 2,,3
  66              		.global	SVC_Handler
  67              		.syntax unified
  68              		.code	16
  69              		.thumb_func
ARM GAS  /tmp/cc0iXrgn.s 			page 4


  70              		.fpu softvfp
  72              	SVC_Handler:
  73              	.LFB45:
  74              		.cfi_startproc
  75              		@ args = 0, pretend = 0, frame = 0
  76              		@ frame_needed = 0, uses_anonymous_args = 0
  77              		@ link register save eliminated.
  78              		@ sp needed
  79 0000 7047     		bx	lr
  80              		.cfi_endproc
  81              	.LFE45:
  83 0002 C046     		.section	.text.PendSV_Handler,"ax",%progbits
  84              		.align	1
  85              		.p2align 2,,3
  86              		.global	PendSV_Handler
  87              		.syntax unified
  88              		.code	16
  89              		.thumb_func
  90              		.fpu softvfp
  92              	PendSV_Handler:
  93              	.LFB47:
  94              		.cfi_startproc
  95              		@ args = 0, pretend = 0, frame = 0
  96              		@ frame_needed = 0, uses_anonymous_args = 0
  97              		@ link register save eliminated.
  98              		@ sp needed
  99 0000 7047     		bx	lr
 100              		.cfi_endproc
 101              	.LFE47:
 103 0002 C046     		.section	.text.SysTick_Handler,"ax",%progbits
 104              		.align	1
 105              		.p2align 2,,3
 106              		.global	SysTick_Handler
 107              		.syntax unified
 108              		.code	16
 109              		.thumb_func
 110              		.fpu softvfp
 112              	SysTick_Handler:
 113              	.LFB41:
 107:Src/stm32f0xx_it.c **** }
 108:Src/stm32f0xx_it.c **** 
 109:Src/stm32f0xx_it.c **** /**
 110:Src/stm32f0xx_it.c ****   * @brief This function handles System service call via SWI instruction.
 111:Src/stm32f0xx_it.c ****   */
 112:Src/stm32f0xx_it.c **** void SVC_Handler(void)
 113:Src/stm32f0xx_it.c **** {
 114:Src/stm32f0xx_it.c ****   /* USER CODE BEGIN SVC_IRQn 0 */
 115:Src/stm32f0xx_it.c **** 
 116:Src/stm32f0xx_it.c ****   /* USER CODE END SVC_IRQn 0 */
 117:Src/stm32f0xx_it.c ****   /* USER CODE BEGIN SVC_IRQn 1 */
 118:Src/stm32f0xx_it.c **** 
 119:Src/stm32f0xx_it.c ****   /* USER CODE END SVC_IRQn 1 */
 120:Src/stm32f0xx_it.c **** }
 121:Src/stm32f0xx_it.c **** 
 122:Src/stm32f0xx_it.c **** /**
 123:Src/stm32f0xx_it.c ****   * @brief This function handles Pendable request for system service.
 124:Src/stm32f0xx_it.c ****   */
ARM GAS  /tmp/cc0iXrgn.s 			page 5


 125:Src/stm32f0xx_it.c **** void PendSV_Handler(void)
 126:Src/stm32f0xx_it.c **** {
 127:Src/stm32f0xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 0 */
 128:Src/stm32f0xx_it.c **** 
 129:Src/stm32f0xx_it.c ****   /* USER CODE END PendSV_IRQn 0 */
 130:Src/stm32f0xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 1 */
 131:Src/stm32f0xx_it.c **** 
 132:Src/stm32f0xx_it.c ****   /* USER CODE END PendSV_IRQn 1 */
 133:Src/stm32f0xx_it.c **** }
 134:Src/stm32f0xx_it.c **** 
 135:Src/stm32f0xx_it.c **** /**
 136:Src/stm32f0xx_it.c ****   * @brief This function handles System tick timer.
 137:Src/stm32f0xx_it.c ****   */
 138:Src/stm32f0xx_it.c **** void SysTick_Handler(void)
 139:Src/stm32f0xx_it.c **** {
 114              		.loc 1 139 1 view -0
 115              		.cfi_startproc
 116              		@ args = 0, pretend = 0, frame = 0
 117              		@ frame_needed = 0, uses_anonymous_args = 0
 140:Src/stm32f0xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 0 */
 141:Src/stm32f0xx_it.c **** 
 142:Src/stm32f0xx_it.c ****   /* USER CODE END SysTick_IRQn 0 */
 143:Src/stm32f0xx_it.c ****   HAL_IncTick();
 118              		.loc 1 143 3 view .LVU6
 139:Src/stm32f0xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 0 */
 119              		.loc 1 139 1 is_stmt 0 view .LVU7
 120 0000 10B5     		push	{r4, lr}
 121              	.LCFI0:
 122              		.cfi_def_cfa_offset 8
 123              		.cfi_offset 4, -8
 124              		.cfi_offset 14, -4
 125              		.loc 1 143 3 view .LVU8
 126 0002 FFF7FEFF 		bl	HAL_IncTick
 127              	.LVL0:
 144:Src/stm32f0xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 1 */
 145:Src/stm32f0xx_it.c **** 
 146:Src/stm32f0xx_it.c ****   /* USER CODE END SysTick_IRQn 1 */
 147:Src/stm32f0xx_it.c **** }
 128              		.loc 1 147 1 view .LVU9
 129              		@ sp needed
 130 0006 10BD     		pop	{r4, pc}
 131              		.cfi_endproc
 132              	.LFE41:
 134              		.section	.text.EXTI0_1_IRQHandler,"ax",%progbits
 135              		.align	1
 136              		.p2align 2,,3
 137              		.global	EXTI0_1_IRQHandler
 138              		.syntax unified
 139              		.code	16
 140              		.thumb_func
 141              		.fpu softvfp
 143              	EXTI0_1_IRQHandler:
 144              	.LFB42:
 148:Src/stm32f0xx_it.c **** 
 149:Src/stm32f0xx_it.c **** /******************************************************************************/
 150:Src/stm32f0xx_it.c **** /* STM32F0xx Peripheral Interrupt Handlers                                    */
 151:Src/stm32f0xx_it.c **** /* Add here the Interrupt Handlers for the used peripherals.                  */
ARM GAS  /tmp/cc0iXrgn.s 			page 6


 152:Src/stm32f0xx_it.c **** /* For the available peripheral interrupt handler names,                      */
 153:Src/stm32f0xx_it.c **** /* please refer to the startup file (startup_stm32f0xx.s).                    */
 154:Src/stm32f0xx_it.c **** /******************************************************************************/
 155:Src/stm32f0xx_it.c **** 
 156:Src/stm32f0xx_it.c **** /**
 157:Src/stm32f0xx_it.c ****   * @brief This function handles EXTI line 0 and 1 interrupts.
 158:Src/stm32f0xx_it.c ****   */
 159:Src/stm32f0xx_it.c **** void EXTI0_1_IRQHandler(void)
 160:Src/stm32f0xx_it.c **** {
 145              		.loc 1 160 1 is_stmt 1 view -0
 146              		.cfi_startproc
 147              		@ args = 0, pretend = 0, frame = 0
 148              		@ frame_needed = 0, uses_anonymous_args = 0
 161:Src/stm32f0xx_it.c ****   /* USER CODE BEGIN EXTI0_1_IRQn 0 */
 162:Src/stm32f0xx_it.c **** 
 163:Src/stm32f0xx_it.c ****   /* USER CODE END EXTI0_1_IRQn 0 */
 164:Src/stm32f0xx_it.c ****   HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_0);
 149              		.loc 1 164 3 view .LVU11
 160:Src/stm32f0xx_it.c ****   /* USER CODE BEGIN EXTI0_1_IRQn 0 */
 150              		.loc 1 160 1 is_stmt 0 view .LVU12
 151 0000 10B5     		push	{r4, lr}
 152              	.LCFI1:
 153              		.cfi_def_cfa_offset 8
 154              		.cfi_offset 4, -8
 155              		.cfi_offset 14, -4
 156              		.loc 1 164 3 view .LVU13
 157 0002 0120     		movs	r0, #1
 158 0004 FFF7FEFF 		bl	HAL_GPIO_EXTI_IRQHandler
 159              	.LVL1:
 165:Src/stm32f0xx_it.c ****   /* USER CODE BEGIN EXTI0_1_IRQn 1 */
 166:Src/stm32f0xx_it.c **** 
 167:Src/stm32f0xx_it.c ****   /* USER CODE END EXTI0_1_IRQn 1 */
 168:Src/stm32f0xx_it.c **** }
 160              		.loc 1 168 1 view .LVU14
 161              		@ sp needed
 162 0008 10BD     		pop	{r4, pc}
 163              		.cfi_endproc
 164              	.LFE42:
 166 000a C046     		.section	.text.HAL_GPIO_EXTI_Callback,"ax",%progbits
 167              		.align	1
 168              		.p2align 2,,3
 169              		.global	HAL_GPIO_EXTI_Callback
 170              		.syntax unified
 171              		.code	16
 172              		.thumb_func
 173              		.fpu softvfp
 175              	HAL_GPIO_EXTI_Callback:
 176              	.LVL2:
 177              	.LFB43:
 169:Src/stm32f0xx_it.c **** 
 170:Src/stm32f0xx_it.c **** /* USER CODE BEGIN 1 */
 171:Src/stm32f0xx_it.c **** void HAL_GPIO_EXTI_Callback(uint16_t GPIO_Pin)
 172:Src/stm32f0xx_it.c **** {
 178              		.loc 1 172 1 is_stmt 1 view -0
 179              		.cfi_startproc
 180              		@ args = 0, pretend = 0, frame = 0
 181              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/cc0iXrgn.s 			page 7


 173:Src/stm32f0xx_it.c ****   if(GPIO_Pin == PPS_Pin)
 182              		.loc 1 173 3 view .LVU16
 172:Src/stm32f0xx_it.c ****   if(GPIO_Pin == PPS_Pin)
 183              		.loc 1 172 1 is_stmt 0 view .LVU17
 184 0000 10B5     		push	{r4, lr}
 185              	.LCFI2:
 186              		.cfi_def_cfa_offset 8
 187              		.cfi_offset 4, -8
 188              		.cfi_offset 14, -4
 189              		.loc 1 173 5 view .LVU18
 190 0002 0128     		cmp	r0, #1
 191 0004 00D0     		beq	.L11
 192              	.LVL3:
 193              	.L9:
 174:Src/stm32f0xx_it.c ****   {
 175:Src/stm32f0xx_it.c ****     HAL_GPIO_TogglePin(OSC_DELAY_GPIO_Port, OSC_DELAY_Pin);
 176:Src/stm32f0xx_it.c ****   }
 177:Src/stm32f0xx_it.c **** }
 194              		.loc 1 177 1 view .LVU19
 195              		@ sp needed
 196 0006 10BD     		pop	{r4, pc}
 197              	.LVL4:
 198              	.L11:
 175:Src/stm32f0xx_it.c ****   }
 199              		.loc 1 175 5 is_stmt 1 view .LVU20
 200 0008 0221     		movs	r1, #2
 201 000a 0248     		ldr	r0, .L12
 202              	.LVL5:
 175:Src/stm32f0xx_it.c ****   }
 203              		.loc 1 175 5 is_stmt 0 view .LVU21
 204 000c FFF7FEFF 		bl	HAL_GPIO_TogglePin
 205              	.LVL6:
 206              		.loc 1 177 1 view .LVU22
 207 0010 F9E7     		b	.L9
 208              	.L13:
 209 0012 C046     		.align	2
 210              	.L12:
 211 0014 00080048 		.word	1207961600
 212              		.cfi_endproc
 213              	.LFE43:
 215              		.text
 216              	.Letext0:
 217              		.file 2 "/usr/arm-none-eabi/include/machine/_default_types.h"
 218              		.file 3 "/usr/arm-none-eabi/include/sys/_stdint.h"
 219              		.file 4 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/system_stm32f0xx.h"
 220              		.file 5 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f030x8.h"
 221              		.file 6 "/usr/arm-none-eabi/include/sys/lock.h"
 222              		.file 7 "/usr/arm-none-eabi/include/sys/_types.h"
 223              		.file 8 "/usr/lib/gcc/arm-none-eabi/8.2.0/include/stddef.h"
 224              		.file 9 "/usr/arm-none-eabi/include/sys/reent.h"
 225              		.file 10 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_gpio.h"
 226              		.file 11 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal.h"
ARM GAS  /tmp/cc0iXrgn.s 			page 8


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f0xx_it.c
     /tmp/cc0iXrgn.s:16     .text.NMI_Handler:0000000000000000 $t
     /tmp/cc0iXrgn.s:25     .text.NMI_Handler:0000000000000000 NMI_Handler
     /tmp/cc0iXrgn.s:40     .text.HardFault_Handler:0000000000000000 $t
     /tmp/cc0iXrgn.s:48     .text.HardFault_Handler:0000000000000000 HardFault_Handler
     /tmp/cc0iXrgn.s:64     .text.SVC_Handler:0000000000000000 $t
     /tmp/cc0iXrgn.s:72     .text.SVC_Handler:0000000000000000 SVC_Handler
     /tmp/cc0iXrgn.s:84     .text.PendSV_Handler:0000000000000000 $t
     /tmp/cc0iXrgn.s:92     .text.PendSV_Handler:0000000000000000 PendSV_Handler
     /tmp/cc0iXrgn.s:104    .text.SysTick_Handler:0000000000000000 $t
     /tmp/cc0iXrgn.s:112    .text.SysTick_Handler:0000000000000000 SysTick_Handler
     /tmp/cc0iXrgn.s:135    .text.EXTI0_1_IRQHandler:0000000000000000 $t
     /tmp/cc0iXrgn.s:143    .text.EXTI0_1_IRQHandler:0000000000000000 EXTI0_1_IRQHandler
     /tmp/cc0iXrgn.s:167    .text.HAL_GPIO_EXTI_Callback:0000000000000000 $t
     /tmp/cc0iXrgn.s:175    .text.HAL_GPIO_EXTI_Callback:0000000000000000 HAL_GPIO_EXTI_Callback
     /tmp/cc0iXrgn.s:211    .text.HAL_GPIO_EXTI_Callback:0000000000000014 $d

UNDEFINED SYMBOLS
HAL_IncTick
HAL_GPIO_EXTI_IRQHandler
HAL_GPIO_TogglePin
