ARM GAS  /tmp/ccsFNKXr.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 2
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.SystemClock_Config,"ax",%progbits
  18              		.align	1
  19              		.p2align 2,,3
  20              		.global	SystemClock_Config
  21              		.arch armv7e-m
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  25              		.fpu fpv4-sp-d16
  27              	SystemClock_Config:
  28              	.LFB127:
  29              		.file 1 "Src/main.c"
   1:Src/main.c    **** /* USER CODE BEGIN Header */
   2:Src/main.c    **** /**
   3:Src/main.c    ****   ******************************************************************************
   4:Src/main.c    ****   * @file           : main.c
   5:Src/main.c    ****   * @brief          : Main program body
   6:Src/main.c    ****   ******************************************************************************
   7:Src/main.c    ****   ** This notice applies to any and all portions of this file
   8:Src/main.c    ****   * that are not between comment pairs USER CODE BEGIN and
   9:Src/main.c    ****   * USER CODE END. Other portions of this file, whether 
  10:Src/main.c    ****   * inserted by the user or by software development tools
  11:Src/main.c    ****   * are owned by their respective copyright owners.
  12:Src/main.c    ****   *
  13:Src/main.c    ****   * COPYRIGHT(c) 2019 STMicroelectronics
  14:Src/main.c    ****   *
  15:Src/main.c    ****   * Redistribution and use in source and binary forms, with or without modification,
  16:Src/main.c    ****   * are permitted provided that the following conditions are met:
  17:Src/main.c    ****   *   1. Redistributions of source code must retain the above copyright notice,
  18:Src/main.c    ****   *      this list of conditions and the following disclaimer.
  19:Src/main.c    ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  20:Src/main.c    ****   *      this list of conditions and the following disclaimer in the documentation
  21:Src/main.c    ****   *      and/or other materials provided with the distribution.
  22:Src/main.c    ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  23:Src/main.c    ****   *      may be used to endorse or promote products derived from this software
  24:Src/main.c    ****   *      without specific prior written permission.
  25:Src/main.c    ****   *
  26:Src/main.c    ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  27:Src/main.c    ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  28:Src/main.c    ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  29:Src/main.c    ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
ARM GAS  /tmp/ccsFNKXr.s 			page 2


  30:Src/main.c    ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  31:Src/main.c    ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  32:Src/main.c    ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  33:Src/main.c    ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  34:Src/main.c    ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  35:Src/main.c    ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  36:Src/main.c    ****   *
  37:Src/main.c    ****   ******************************************************************************
  38:Src/main.c    ****   */
  39:Src/main.c    **** /* USER CODE END Header */
  40:Src/main.c    **** 
  41:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  42:Src/main.c    **** #include "main.h"
  43:Src/main.c    **** #include "usart.h"
  44:Src/main.c    **** #include "gpio.h"
  45:Src/main.c    **** 
  46:Src/main.c    **** /* Private includes ----------------------------------------------------------*/
  47:Src/main.c    **** /* USER CODE BEGIN Includes */
  48:Src/main.c    **** 
  49:Src/main.c    **** /* USER CODE END Includes */
  50:Src/main.c    **** 
  51:Src/main.c    **** /* Private typedef -----------------------------------------------------------*/
  52:Src/main.c    **** /* USER CODE BEGIN PTD */
  53:Src/main.c    **** 
  54:Src/main.c    **** /* USER CODE END PTD */
  55:Src/main.c    **** 
  56:Src/main.c    **** /* Private define ------------------------------------------------------------*/
  57:Src/main.c    **** /* USER CODE BEGIN PD */
  58:Src/main.c    **** 
  59:Src/main.c    **** /* USER CODE END PD */
  60:Src/main.c    **** 
  61:Src/main.c    **** /* Private macro -------------------------------------------------------------*/
  62:Src/main.c    **** /* USER CODE BEGIN PM */
  63:Src/main.c    **** 
  64:Src/main.c    **** /* USER CODE END PM */
  65:Src/main.c    **** 
  66:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  67:Src/main.c    **** 
  68:Src/main.c    **** /* USER CODE BEGIN PV */
  69:Src/main.c    **** 
  70:Src/main.c    **** /* USER CODE END PV */
  71:Src/main.c    **** 
  72:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  73:Src/main.c    **** void SystemClock_Config(void);
  74:Src/main.c    **** /* USER CODE BEGIN PFP */
  75:Src/main.c    **** 
  76:Src/main.c    **** /* USER CODE END PFP */
  77:Src/main.c    **** 
  78:Src/main.c    **** /* Private user code ---------------------------------------------------------*/
  79:Src/main.c    **** /* USER CODE BEGIN 0 */
  80:Src/main.c    **** 
  81:Src/main.c    **** /* USER CODE END 0 */
  82:Src/main.c    **** 
  83:Src/main.c    **** /**
  84:Src/main.c    ****   * @brief  The application entry point.
  85:Src/main.c    ****   * @retval int
  86:Src/main.c    ****   */
ARM GAS  /tmp/ccsFNKXr.s 			page 3


  87:Src/main.c    **** int main(void)
  88:Src/main.c    **** {
  89:Src/main.c    ****   /* USER CODE BEGIN 1 */
  90:Src/main.c    **** 
  91:Src/main.c    ****   /* USER CODE END 1 */
  92:Src/main.c    **** 
  93:Src/main.c    ****   /* MCU Configuration--------------------------------------------------------*/
  94:Src/main.c    **** 
  95:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  96:Src/main.c    ****   HAL_Init();
  97:Src/main.c    **** 
  98:Src/main.c    ****   /* USER CODE BEGIN Init */
  99:Src/main.c    **** 
 100:Src/main.c    ****   /* USER CODE END Init */
 101:Src/main.c    **** 
 102:Src/main.c    ****   /* Configure the system clock */
 103:Src/main.c    ****   SystemClock_Config();
 104:Src/main.c    **** 
 105:Src/main.c    ****   /* USER CODE BEGIN SysInit */
 106:Src/main.c    **** 
 107:Src/main.c    ****   /* USER CODE END SysInit */
 108:Src/main.c    **** 
 109:Src/main.c    ****   /* Initialize all configured peripherals */
 110:Src/main.c    ****   MX_GPIO_Init();
 111:Src/main.c    ****   MX_USART2_UART_Init();
 112:Src/main.c    ****   /* USER CODE BEGIN 2 */
 113:Src/main.c    **** 
 114:Src/main.c    ****   /* USER CODE END 2 */
 115:Src/main.c    **** 
 116:Src/main.c    ****   /* Infinite loop */
 117:Src/main.c    ****   /* USER CODE BEGIN WHILE */
 118:Src/main.c    ****   while (1)
 119:Src/main.c    ****   {
 120:Src/main.c    ****     /* USER CODE END WHILE */
 121:Src/main.c    **** 
 122:Src/main.c    ****     /* USER CODE BEGIN 3 */
 123:Src/main.c    ****   }
 124:Src/main.c    ****   /* USER CODE END 3 */
 125:Src/main.c    **** }
 126:Src/main.c    **** 
 127:Src/main.c    **** /**
 128:Src/main.c    ****   * @brief System Clock Configuration
 129:Src/main.c    ****   * @retval None
 130:Src/main.c    ****   */
 131:Src/main.c    **** void SystemClock_Config(void)
 132:Src/main.c    **** {
  30              		.loc 1 132 1 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 80
  33              		@ frame_needed = 0, uses_anonymous_args = 0
 133:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
  34              		.loc 1 133 3 view .LVU1
 132:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
  35              		.loc 1 132 1 is_stmt 0 view .LVU2
  36 0000 F0B5     		push	{r4, r5, r6, r7, lr}
  37              	.LCFI0:
  38              		.cfi_def_cfa_offset 20
ARM GAS  /tmp/ccsFNKXr.s 			page 4


  39              		.cfi_offset 4, -20
  40              		.cfi_offset 5, -16
  41              		.cfi_offset 6, -12
  42              		.cfi_offset 7, -8
  43              		.cfi_offset 14, -4
  44              		.loc 1 133 22 view .LVU3
  45 0002 0024     		movs	r4, #0
 132:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
  46              		.loc 1 132 1 view .LVU4
  47 0004 95B0     		sub	sp, sp, #84
  48              	.LCFI1:
  49              		.cfi_def_cfa_offset 104
  50              		.loc 1 133 22 view .LVU5
  51 0006 CDE90B44 		strd	r4, r4, [sp, #44]
  52 000a CDE90944 		strd	r4, r4, [sp, #36]
 134:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
  53              		.loc 1 134 22 view .LVU6
  54 000e CDE90344 		strd	r4, r4, [sp, #12]
  55 0012 CDE90544 		strd	r4, r4, [sp, #20]
  56              	.LBB8:
 135:Src/main.c    **** 
 136:Src/main.c    ****   /**Configure the main internal regulator output voltage 
 137:Src/main.c    ****   */
 138:Src/main.c    ****   __HAL_RCC_PWR_CLK_ENABLE();
  57              		.loc 1 138 3 view .LVU7
  58 0016 1E4B     		ldr	r3, .L4
  59 0018 0094     		str	r4, [sp]
  60              	.LBE8:
 133:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
  61              		.loc 1 133 22 view .LVU8
  62 001a 0D94     		str	r4, [sp, #52]
 134:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
  63              		.loc 1 134 3 is_stmt 1 view .LVU9
  64              		.loc 1 138 3 view .LVU10
  65              	.LBB9:
  66              		.loc 1 138 3 view .LVU11
  67              		.loc 1 138 3 view .LVU12
  68              	.LBE9:
 134:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
  69              		.loc 1 134 22 is_stmt 0 view .LVU13
  70 001c 0294     		str	r4, [sp, #8]
  71              	.LBB10:
  72              		.loc 1 138 3 view .LVU14
  73 001e 196C     		ldr	r1, [r3, #64]
  74              	.LBE10:
  75              	.LBB11:
 139:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE2);
  76              		.loc 1 139 3 view .LVU15
  77 0020 1C4A     		ldr	r2, .L4+4
  78              	.LBE11:
  79              	.LBB12:
 138:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE2);
  80              		.loc 1 138 3 view .LVU16
  81 0022 41F08051 		orr	r1, r1, #268435456
  82 0026 1964     		str	r1, [r3, #64]
 138:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE2);
  83              		.loc 1 138 3 is_stmt 1 view .LVU17
ARM GAS  /tmp/ccsFNKXr.s 			page 5


  84 0028 1B6C     		ldr	r3, [r3, #64]
  85 002a 03F08053 		and	r3, r3, #268435456
  86 002e 0093     		str	r3, [sp]
 138:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE2);
  87              		.loc 1 138 3 view .LVU18
  88 0030 009B     		ldr	r3, [sp]
  89              	.LBE12:
  90              		.loc 1 139 3 view .LVU19
  91              	.LBB13:
  92              		.loc 1 139 3 view .LVU20
  93 0032 0194     		str	r4, [sp, #4]
  94              		.loc 1 139 3 view .LVU21
  95 0034 1368     		ldr	r3, [r2]
  96 0036 23F44043 		bic	r3, r3, #49152
  97 003a 43F40043 		orr	r3, r3, #32768
  98 003e 1360     		str	r3, [r2]
  99              		.loc 1 139 3 view .LVU22
 100 0040 1368     		ldr	r3, [r2]
 101              	.LBE13:
 140:Src/main.c    ****   /**Initializes the CPU, AHB and APB busses clocks 
 141:Src/main.c    ****   */
 142:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 143:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 144:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 145:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 146:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 102              		.loc 1 146 35 is_stmt 0 view .LVU23
 103 0042 0F94     		str	r4, [sp, #60]
 104              	.LBB14:
 139:Src/main.c    ****   /**Initializes the CPU, AHB and APB busses clocks 
 105              		.loc 1 139 3 view .LVU24
 106 0044 03F44043 		and	r3, r3, #49152
 107 0048 0193     		str	r3, [sp, #4]
 139:Src/main.c    ****   /**Initializes the CPU, AHB and APB busses clocks 
 108              		.loc 1 139 3 is_stmt 1 view .LVU25
 109              	.LBE14:
 143:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 110              		.loc 1 143 30 is_stmt 0 view .LVU26
 111 004a 0122     		movs	r2, #1
 144:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 112              		.loc 1 144 41 view .LVU27
 113 004c 1023     		movs	r3, #16
 142:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 114              		.loc 1 142 36 view .LVU28
 115 004e 0225     		movs	r5, #2
 147:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 16;
 148:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 336;
 116              		.loc 1 148 30 view .LVU29
 117 0050 4FF4A871 		mov	r1, #336
 118              	.LBB15:
 139:Src/main.c    ****   /**Initializes the CPU, AHB and APB busses clocks 
 119              		.loc 1 139 3 view .LVU30
 120 0054 0198     		ldr	r0, [sp, #4]
 121              	.LBE15:
 142:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 122              		.loc 1 142 3 is_stmt 1 view .LVU31
 143:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
ARM GAS  /tmp/ccsFNKXr.s 			page 6


 123              		.loc 1 143 30 is_stmt 0 view .LVU32
 124 0056 0B92     		str	r2, [sp, #44]
 144:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 125              		.loc 1 144 41 view .LVU33
 126 0058 0C93     		str	r3, [sp, #48]
 149:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV4;
 127              		.loc 1 149 30 view .LVU34
 128 005a 0422     		movs	r2, #4
 147:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 336;
 129              		.loc 1 147 30 view .LVU35
 130 005c 1093     		str	r3, [sp, #64]
 150:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = 7;
 151:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 131              		.loc 1 151 7 view .LVU36
 132 005e 08A8     		add	r0, sp, #32
 150:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = 7;
 133              		.loc 1 150 30 view .LVU37
 134 0060 0723     		movs	r3, #7
 135 0062 CDE91223 		strd	r2, r3, [sp, #72]
 148:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV4;
 136              		.loc 1 148 30 view .LVU38
 137 0066 1191     		str	r1, [sp, #68]
 142:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 138              		.loc 1 142 36 view .LVU39
 139 0068 0895     		str	r5, [sp, #32]
 143:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 140              		.loc 1 143 3 is_stmt 1 view .LVU40
 144:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 141              		.loc 1 144 3 view .LVU41
 145:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 142              		.loc 1 145 3 view .LVU42
 146:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 16;
 143              		.loc 1 146 3 view .LVU43
 147:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 336;
 144              		.loc 1 147 3 view .LVU44
 148:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV4;
 145              		.loc 1 148 3 view .LVU45
 149:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = 7;
 146              		.loc 1 149 3 view .LVU46
 147              		.loc 1 151 3 view .LVU47
 145:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 148              		.loc 1 145 34 is_stmt 0 view .LVU48
 149 006a 0E95     		str	r5, [sp, #56]
 152:Src/main.c    ****   {
 153:Src/main.c    ****     Error_Handler();
 154:Src/main.c    ****   }
 155:Src/main.c    ****   /**Initializes the CPU, AHB and APB busses clocks 
 156:Src/main.c    ****   */
 157:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 150              		.loc 1 157 31 view .LVU49
 151 006c 0F26     		movs	r6, #15
 151:Src/main.c    ****   {
 152              		.loc 1 151 7 view .LVU50
 153 006e FFF7FEFF 		bl	HAL_RCC_OscConfig
 154              	.LVL0:
 155              		.loc 1 157 3 is_stmt 1 view .LVU51
 158:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
ARM GAS  /tmp/ccsFNKXr.s 			page 7


 159:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 156              		.loc 1 159 3 view .LVU52
 160:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 157              		.loc 1 160 3 view .LVU53
 161:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 158              		.loc 1 161 3 view .LVU54
 157:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 159              		.loc 1 157 31 is_stmt 0 view .LVU55
 160 0072 0227     		movs	r7, #2
 161 0074 0022     		movs	r2, #0
 162 0076 4FF48053 		mov	r3, #4096
 162:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 163:Src/main.c    **** 
 164:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 163              		.loc 1 164 7 view .LVU56
 164 007a 2946     		mov	r1, r5
 165 007c 02A8     		add	r0, sp, #8
 162:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 166              		.loc 1 162 36 view .LVU57
 167 007e 0694     		str	r4, [sp, #24]
 157:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 168              		.loc 1 157 31 view .LVU58
 169 0080 CDE90267 		strd	r6, [sp, #8]
 170 0084 CDE90423 		strd	r2, [sp, #16]
 162:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 171              		.loc 1 162 3 is_stmt 1 view .LVU59
 172              		.loc 1 164 3 view .LVU60
 173              		.loc 1 164 7 is_stmt 0 view .LVU61
 174 0088 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 175              	.LVL1:
 165:Src/main.c    ****   {
 166:Src/main.c    ****     Error_Handler();
 167:Src/main.c    ****   }
 168:Src/main.c    **** }
 176              		.loc 1 168 1 view .LVU62
 177 008c 15B0     		add	sp, sp, #84
 178              	.LCFI2:
 179              		.cfi_def_cfa_offset 20
 180              		@ sp needed
 181 008e F0BD     		pop	{r4, r5, r6, r7, pc}
 182              	.L5:
 183              		.align	2
 184              	.L4:
 185 0090 00380240 		.word	1073887232
 186 0094 00700040 		.word	1073770496
 187              		.cfi_endproc
 188              	.LFE127:
 190              		.section	.text.startup.main,"ax",%progbits
 191              		.align	1
 192              		.p2align 2,,3
 193              		.global	main
 194              		.syntax unified
 195              		.thumb
 196              		.thumb_func
 197              		.fpu fpv4-sp-d16
 199              	main:
 200              	.LFB126:
ARM GAS  /tmp/ccsFNKXr.s 			page 8


  88:Src/main.c    ****   /* USER CODE BEGIN 1 */
 201              		.loc 1 88 1 is_stmt 1 view -0
 202              		.cfi_startproc
 203              		@ Volatile: function does not return.
 204              		@ args = 0, pretend = 0, frame = 0
 205              		@ frame_needed = 0, uses_anonymous_args = 0
  96:Src/main.c    **** 
 206              		.loc 1 96 3 view .LVU64
  88:Src/main.c    ****   /* USER CODE BEGIN 1 */
 207              		.loc 1 88 1 is_stmt 0 view .LVU65
 208 0000 08B5     		push	{r3, lr}
 209              	.LCFI3:
 210              		.cfi_def_cfa_offset 8
 211              		.cfi_offset 3, -8
 212              		.cfi_offset 14, -4
  96:Src/main.c    **** 
 213              		.loc 1 96 3 view .LVU66
 214 0002 FFF7FEFF 		bl	HAL_Init
 215              	.LVL2:
 103:Src/main.c    **** 
 216              		.loc 1 103 3 is_stmt 1 view .LVU67
 217 0006 FFF7FEFF 		bl	SystemClock_Config
 218              	.LVL3:
 110:Src/main.c    ****   MX_USART2_UART_Init();
 219              		.loc 1 110 3 view .LVU68
 220 000a FFF7FEFF 		bl	MX_GPIO_Init
 221              	.LVL4:
 111:Src/main.c    ****   /* USER CODE BEGIN 2 */
 222              		.loc 1 111 3 view .LVU69
 223 000e FFF7FEFF 		bl	MX_USART2_UART_Init
 224              	.LVL5:
 225              	.L7:
 118:Src/main.c    ****   {
 226              		.loc 1 118 3 discriminator 1 view .LVU70
 123:Src/main.c    ****   /* USER CODE END 3 */
 227              		.loc 1 123 3 discriminator 1 view .LVU71
 118:Src/main.c    ****   {
 228              		.loc 1 118 3 discriminator 1 view .LVU72
 123:Src/main.c    ****   /* USER CODE END 3 */
 229              		.loc 1 123 3 discriminator 1 view .LVU73
 230 0012 FEE7     		b	.L7
 231              		.cfi_endproc
 232              	.LFE126:
 234              		.section	.text.Error_Handler,"ax",%progbits
 235              		.align	1
 236              		.p2align 2,,3
 237              		.global	Error_Handler
 238              		.syntax unified
 239              		.thumb
 240              		.thumb_func
 241              		.fpu fpv4-sp-d16
 243              	Error_Handler:
 244              	.LFB128:
 169:Src/main.c    **** 
 170:Src/main.c    **** /* USER CODE BEGIN 4 */
 171:Src/main.c    **** 
 172:Src/main.c    **** /* USER CODE END 4 */
ARM GAS  /tmp/ccsFNKXr.s 			page 9


 173:Src/main.c    **** 
 174:Src/main.c    **** /**
 175:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 176:Src/main.c    ****   * @retval None
 177:Src/main.c    ****   */
 178:Src/main.c    **** void Error_Handler(void)
 179:Src/main.c    **** {
 245              		.loc 1 179 1 view -0
 246              		.cfi_startproc
 247              		@ args = 0, pretend = 0, frame = 0
 248              		@ frame_needed = 0, uses_anonymous_args = 0
 249              		@ link register save eliminated.
 180:Src/main.c    ****   /* USER CODE BEGIN Error_Handler_Debug */
 181:Src/main.c    ****   /* User can add his own implementation to report the HAL error return state */
 182:Src/main.c    **** 
 183:Src/main.c    ****   /* USER CODE END Error_Handler_Debug */
 184:Src/main.c    **** }
 250              		.loc 1 184 1 view .LVU75
 251 0000 7047     		bx	lr
 252              		.cfi_endproc
 253              	.LFE128:
 255 0002 00BF     		.text
 256              	.Letext0:
 257              		.file 2 "/usr/arm-none-eabi/include/machine/_default_types.h"
 258              		.file 3 "/usr/arm-none-eabi/include/sys/_stdint.h"
 259              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 260              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 261              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f401xe.h"
 262              		.file 7 "/usr/arm-none-eabi/include/sys/lock.h"
 263              		.file 8 "/usr/arm-none-eabi/include/sys/_types.h"
 264              		.file 9 "/usr/lib/gcc/arm-none-eabi/8.2.0/include/stddef.h"
 265              		.file 10 "/usr/arm-none-eabi/include/sys/reent.h"
 266              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 267              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 268              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 269              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 270              		.file 15 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 271              		.file 16 "Inc/usart.h"
 272              		.file 17 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 273              		.file 18 "Inc/gpio.h"
ARM GAS  /tmp/ccsFNKXr.s 			page 10


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccsFNKXr.s:18     .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccsFNKXr.s:27     .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccsFNKXr.s:185    .text.SystemClock_Config:0000000000000090 $d
     /tmp/ccsFNKXr.s:191    .text.startup.main:0000000000000000 $t
     /tmp/ccsFNKXr.s:199    .text.startup.main:0000000000000000 main
     /tmp/ccsFNKXr.s:235    .text.Error_Handler:0000000000000000 $t
     /tmp/ccsFNKXr.s:243    .text.Error_Handler:0000000000000000 Error_Handler

UNDEFINED SYMBOLS
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
MX_GPIO_Init
MX_USART2_UART_Init
